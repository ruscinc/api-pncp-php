<?php
/**
 * NotaFiscalEletronicaConsultaDTO
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API PNCP
 *
 * API REST de serviços do Portal Nacional de Contratações Públicas (PNCP)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: css.serpro@serpro.gov.br
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 7.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * NotaFiscalEletronicaConsultaDTO Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class NotaFiscalEletronicaConsultaDTO implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'NotaFiscalEletronicaConsultaDTO';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'instrumento_cobranca_id' => 'int',
        'chave' => 'string',
        'nf_transparencia_id' => 'int',
        'numero' => 'int',
        'serie' => 'int',
        'data_emissao' => 'string',
        'ni_emitente' => 'string',
        'nome_emitente' => 'string',
        'nome_municipio_emitente' => 'string',
        'codigo_orgao_destinatario' => 'string',
        'nome_orgao_destinatario' => 'string',
        'codigo_orgao_superior_destinatario' => 'string',
        'nome_orgao_superior_destinatario' => 'string',
        'valor_nota_fiscal' => 'string',
        'tipo_evento_mais_recente' => 'string',
        'data_tipo_evento_mais_recente' => 'string',
        'data_inclusao' => '\DateTime',
        'data_atualizacao' => '\DateTime',
        'itens' => '\OpenAPI\Client\Model\ItemNotaFiscalConsultaDTO[]',
        'eventos' => '\OpenAPI\Client\Model\EventoNotaFiscalConsultaDTO[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'instrumento_cobranca_id' => 'int64',
        'chave' => null,
        'nf_transparencia_id' => 'int64',
        'numero' => 'int64',
        'serie' => 'int32',
        'data_emissao' => null,
        'ni_emitente' => null,
        'nome_emitente' => null,
        'nome_municipio_emitente' => null,
        'codigo_orgao_destinatario' => null,
        'nome_orgao_destinatario' => null,
        'codigo_orgao_superior_destinatario' => null,
        'nome_orgao_superior_destinatario' => null,
        'valor_nota_fiscal' => null,
        'tipo_evento_mais_recente' => null,
        'data_tipo_evento_mais_recente' => null,
        'data_inclusao' => 'date-time',
        'data_atualizacao' => 'date-time',
        'itens' => null,
        'eventos' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'instrumento_cobranca_id' => false,
		'chave' => false,
		'nf_transparencia_id' => false,
		'numero' => false,
		'serie' => false,
		'data_emissao' => false,
		'ni_emitente' => false,
		'nome_emitente' => false,
		'nome_municipio_emitente' => false,
		'codigo_orgao_destinatario' => false,
		'nome_orgao_destinatario' => false,
		'codigo_orgao_superior_destinatario' => false,
		'nome_orgao_superior_destinatario' => false,
		'valor_nota_fiscal' => false,
		'tipo_evento_mais_recente' => false,
		'data_tipo_evento_mais_recente' => false,
		'data_inclusao' => false,
		'data_atualizacao' => false,
		'itens' => false,
		'eventos' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'instrumento_cobranca_id' => 'instrumentoCobrancaId',
        'chave' => 'chave',
        'nf_transparencia_id' => 'nfTransparenciaID',
        'numero' => 'numero',
        'serie' => 'serie',
        'data_emissao' => 'dataEmissao',
        'ni_emitente' => 'niEmitente',
        'nome_emitente' => 'nomeEmitente',
        'nome_municipio_emitente' => 'nomeMunicipioEmitente',
        'codigo_orgao_destinatario' => 'codigoOrgaoDestinatario',
        'nome_orgao_destinatario' => 'nomeOrgaoDestinatario',
        'codigo_orgao_superior_destinatario' => 'codigoOrgaoSuperiorDestinatario',
        'nome_orgao_superior_destinatario' => 'nomeOrgaoSuperiorDestinatario',
        'valor_nota_fiscal' => 'valorNotaFiscal',
        'tipo_evento_mais_recente' => 'tipoEventoMaisRecente',
        'data_tipo_evento_mais_recente' => 'dataTipoEventoMaisRecente',
        'data_inclusao' => 'dataInclusao',
        'data_atualizacao' => 'dataAtualizacao',
        'itens' => 'itens',
        'eventos' => 'eventos'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'instrumento_cobranca_id' => 'setInstrumentoCobrancaId',
        'chave' => 'setChave',
        'nf_transparencia_id' => 'setNfTransparenciaId',
        'numero' => 'setNumero',
        'serie' => 'setSerie',
        'data_emissao' => 'setDataEmissao',
        'ni_emitente' => 'setNiEmitente',
        'nome_emitente' => 'setNomeEmitente',
        'nome_municipio_emitente' => 'setNomeMunicipioEmitente',
        'codigo_orgao_destinatario' => 'setCodigoOrgaoDestinatario',
        'nome_orgao_destinatario' => 'setNomeOrgaoDestinatario',
        'codigo_orgao_superior_destinatario' => 'setCodigoOrgaoSuperiorDestinatario',
        'nome_orgao_superior_destinatario' => 'setNomeOrgaoSuperiorDestinatario',
        'valor_nota_fiscal' => 'setValorNotaFiscal',
        'tipo_evento_mais_recente' => 'setTipoEventoMaisRecente',
        'data_tipo_evento_mais_recente' => 'setDataTipoEventoMaisRecente',
        'data_inclusao' => 'setDataInclusao',
        'data_atualizacao' => 'setDataAtualizacao',
        'itens' => 'setItens',
        'eventos' => 'setEventos'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'instrumento_cobranca_id' => 'getInstrumentoCobrancaId',
        'chave' => 'getChave',
        'nf_transparencia_id' => 'getNfTransparenciaId',
        'numero' => 'getNumero',
        'serie' => 'getSerie',
        'data_emissao' => 'getDataEmissao',
        'ni_emitente' => 'getNiEmitente',
        'nome_emitente' => 'getNomeEmitente',
        'nome_municipio_emitente' => 'getNomeMunicipioEmitente',
        'codigo_orgao_destinatario' => 'getCodigoOrgaoDestinatario',
        'nome_orgao_destinatario' => 'getNomeOrgaoDestinatario',
        'codigo_orgao_superior_destinatario' => 'getCodigoOrgaoSuperiorDestinatario',
        'nome_orgao_superior_destinatario' => 'getNomeOrgaoSuperiorDestinatario',
        'valor_nota_fiscal' => 'getValorNotaFiscal',
        'tipo_evento_mais_recente' => 'getTipoEventoMaisRecente',
        'data_tipo_evento_mais_recente' => 'getDataTipoEventoMaisRecente',
        'data_inclusao' => 'getDataInclusao',
        'data_atualizacao' => 'getDataAtualizacao',
        'itens' => 'getItens',
        'eventos' => 'getEventos'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->setIfExists('instrumento_cobranca_id', $data ?? [], null);
        $this->setIfExists('chave', $data ?? [], null);
        $this->setIfExists('nf_transparencia_id', $data ?? [], null);
        $this->setIfExists('numero', $data ?? [], null);
        $this->setIfExists('serie', $data ?? [], null);
        $this->setIfExists('data_emissao', $data ?? [], null);
        $this->setIfExists('ni_emitente', $data ?? [], null);
        $this->setIfExists('nome_emitente', $data ?? [], null);
        $this->setIfExists('nome_municipio_emitente', $data ?? [], null);
        $this->setIfExists('codigo_orgao_destinatario', $data ?? [], null);
        $this->setIfExists('nome_orgao_destinatario', $data ?? [], null);
        $this->setIfExists('codigo_orgao_superior_destinatario', $data ?? [], null);
        $this->setIfExists('nome_orgao_superior_destinatario', $data ?? [], null);
        $this->setIfExists('valor_nota_fiscal', $data ?? [], null);
        $this->setIfExists('tipo_evento_mais_recente', $data ?? [], null);
        $this->setIfExists('data_tipo_evento_mais_recente', $data ?? [], null);
        $this->setIfExists('data_inclusao', $data ?? [], null);
        $this->setIfExists('data_atualizacao', $data ?? [], null);
        $this->setIfExists('itens', $data ?? [], null);
        $this->setIfExists('eventos', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets instrumento_cobranca_id
     *
     * @return int|null
     */
    public function getInstrumentoCobrancaId()
    {
        return $this->container['instrumento_cobranca_id'];
    }

    /**
     * Sets instrumento_cobranca_id
     *
     * @param int|null $instrumento_cobranca_id instrumento_cobranca_id
     *
     * @return self
     */
    public function setInstrumentoCobrancaId($instrumento_cobranca_id)
    {
        if (is_null($instrumento_cobranca_id)) {
            throw new \InvalidArgumentException('non-nullable instrumento_cobranca_id cannot be null');
        }
        $this->container['instrumento_cobranca_id'] = $instrumento_cobranca_id;

        return $this;
    }

    /**
     * Gets chave
     *
     * @return string|null
     */
    public function getChave()
    {
        return $this->container['chave'];
    }

    /**
     * Sets chave
     *
     * @param string|null $chave chave
     *
     * @return self
     */
    public function setChave($chave)
    {
        if (is_null($chave)) {
            throw new \InvalidArgumentException('non-nullable chave cannot be null');
        }
        $this->container['chave'] = $chave;

        return $this;
    }

    /**
     * Gets nf_transparencia_id
     *
     * @return int|null
     */
    public function getNfTransparenciaId()
    {
        return $this->container['nf_transparencia_id'];
    }

    /**
     * Sets nf_transparencia_id
     *
     * @param int|null $nf_transparencia_id nf_transparencia_id
     *
     * @return self
     */
    public function setNfTransparenciaId($nf_transparencia_id)
    {
        if (is_null($nf_transparencia_id)) {
            throw new \InvalidArgumentException('non-nullable nf_transparencia_id cannot be null');
        }
        $this->container['nf_transparencia_id'] = $nf_transparencia_id;

        return $this;
    }

    /**
     * Gets numero
     *
     * @return int|null
     */
    public function getNumero()
    {
        return $this->container['numero'];
    }

    /**
     * Sets numero
     *
     * @param int|null $numero numero
     *
     * @return self
     */
    public function setNumero($numero)
    {
        if (is_null($numero)) {
            throw new \InvalidArgumentException('non-nullable numero cannot be null');
        }
        $this->container['numero'] = $numero;

        return $this;
    }

    /**
     * Gets serie
     *
     * @return int|null
     */
    public function getSerie()
    {
        return $this->container['serie'];
    }

    /**
     * Sets serie
     *
     * @param int|null $serie serie
     *
     * @return self
     */
    public function setSerie($serie)
    {
        if (is_null($serie)) {
            throw new \InvalidArgumentException('non-nullable serie cannot be null');
        }
        $this->container['serie'] = $serie;

        return $this;
    }

    /**
     * Gets data_emissao
     *
     * @return string|null
     */
    public function getDataEmissao()
    {
        return $this->container['data_emissao'];
    }

    /**
     * Sets data_emissao
     *
     * @param string|null $data_emissao data_emissao
     *
     * @return self
     */
    public function setDataEmissao($data_emissao)
    {
        if (is_null($data_emissao)) {
            throw new \InvalidArgumentException('non-nullable data_emissao cannot be null');
        }
        $this->container['data_emissao'] = $data_emissao;

        return $this;
    }

    /**
     * Gets ni_emitente
     *
     * @return string|null
     */
    public function getNiEmitente()
    {
        return $this->container['ni_emitente'];
    }

    /**
     * Sets ni_emitente
     *
     * @param string|null $ni_emitente ni_emitente
     *
     * @return self
     */
    public function setNiEmitente($ni_emitente)
    {
        if (is_null($ni_emitente)) {
            throw new \InvalidArgumentException('non-nullable ni_emitente cannot be null');
        }
        $this->container['ni_emitente'] = $ni_emitente;

        return $this;
    }

    /**
     * Gets nome_emitente
     *
     * @return string|null
     */
    public function getNomeEmitente()
    {
        return $this->container['nome_emitente'];
    }

    /**
     * Sets nome_emitente
     *
     * @param string|null $nome_emitente nome_emitente
     *
     * @return self
     */
    public function setNomeEmitente($nome_emitente)
    {
        if (is_null($nome_emitente)) {
            throw new \InvalidArgumentException('non-nullable nome_emitente cannot be null');
        }
        $this->container['nome_emitente'] = $nome_emitente;

        return $this;
    }

    /**
     * Gets nome_municipio_emitente
     *
     * @return string|null
     */
    public function getNomeMunicipioEmitente()
    {
        return $this->container['nome_municipio_emitente'];
    }

    /**
     * Sets nome_municipio_emitente
     *
     * @param string|null $nome_municipio_emitente nome_municipio_emitente
     *
     * @return self
     */
    public function setNomeMunicipioEmitente($nome_municipio_emitente)
    {
        if (is_null($nome_municipio_emitente)) {
            throw new \InvalidArgumentException('non-nullable nome_municipio_emitente cannot be null');
        }
        $this->container['nome_municipio_emitente'] = $nome_municipio_emitente;

        return $this;
    }

    /**
     * Gets codigo_orgao_destinatario
     *
     * @return string|null
     */
    public function getCodigoOrgaoDestinatario()
    {
        return $this->container['codigo_orgao_destinatario'];
    }

    /**
     * Sets codigo_orgao_destinatario
     *
     * @param string|null $codigo_orgao_destinatario codigo_orgao_destinatario
     *
     * @return self
     */
    public function setCodigoOrgaoDestinatario($codigo_orgao_destinatario)
    {
        if (is_null($codigo_orgao_destinatario)) {
            throw new \InvalidArgumentException('non-nullable codigo_orgao_destinatario cannot be null');
        }
        $this->container['codigo_orgao_destinatario'] = $codigo_orgao_destinatario;

        return $this;
    }

    /**
     * Gets nome_orgao_destinatario
     *
     * @return string|null
     */
    public function getNomeOrgaoDestinatario()
    {
        return $this->container['nome_orgao_destinatario'];
    }

    /**
     * Sets nome_orgao_destinatario
     *
     * @param string|null $nome_orgao_destinatario nome_orgao_destinatario
     *
     * @return self
     */
    public function setNomeOrgaoDestinatario($nome_orgao_destinatario)
    {
        if (is_null($nome_orgao_destinatario)) {
            throw new \InvalidArgumentException('non-nullable nome_orgao_destinatario cannot be null');
        }
        $this->container['nome_orgao_destinatario'] = $nome_orgao_destinatario;

        return $this;
    }

    /**
     * Gets codigo_orgao_superior_destinatario
     *
     * @return string|null
     */
    public function getCodigoOrgaoSuperiorDestinatario()
    {
        return $this->container['codigo_orgao_superior_destinatario'];
    }

    /**
     * Sets codigo_orgao_superior_destinatario
     *
     * @param string|null $codigo_orgao_superior_destinatario codigo_orgao_superior_destinatario
     *
     * @return self
     */
    public function setCodigoOrgaoSuperiorDestinatario($codigo_orgao_superior_destinatario)
    {
        if (is_null($codigo_orgao_superior_destinatario)) {
            throw new \InvalidArgumentException('non-nullable codigo_orgao_superior_destinatario cannot be null');
        }
        $this->container['codigo_orgao_superior_destinatario'] = $codigo_orgao_superior_destinatario;

        return $this;
    }

    /**
     * Gets nome_orgao_superior_destinatario
     *
     * @return string|null
     */
    public function getNomeOrgaoSuperiorDestinatario()
    {
        return $this->container['nome_orgao_superior_destinatario'];
    }

    /**
     * Sets nome_orgao_superior_destinatario
     *
     * @param string|null $nome_orgao_superior_destinatario nome_orgao_superior_destinatario
     *
     * @return self
     */
    public function setNomeOrgaoSuperiorDestinatario($nome_orgao_superior_destinatario)
    {
        if (is_null($nome_orgao_superior_destinatario)) {
            throw new \InvalidArgumentException('non-nullable nome_orgao_superior_destinatario cannot be null');
        }
        $this->container['nome_orgao_superior_destinatario'] = $nome_orgao_superior_destinatario;

        return $this;
    }

    /**
     * Gets valor_nota_fiscal
     *
     * @return string|null
     */
    public function getValorNotaFiscal()
    {
        return $this->container['valor_nota_fiscal'];
    }

    /**
     * Sets valor_nota_fiscal
     *
     * @param string|null $valor_nota_fiscal valor_nota_fiscal
     *
     * @return self
     */
    public function setValorNotaFiscal($valor_nota_fiscal)
    {
        if (is_null($valor_nota_fiscal)) {
            throw new \InvalidArgumentException('non-nullable valor_nota_fiscal cannot be null');
        }
        $this->container['valor_nota_fiscal'] = $valor_nota_fiscal;

        return $this;
    }

    /**
     * Gets tipo_evento_mais_recente
     *
     * @return string|null
     */
    public function getTipoEventoMaisRecente()
    {
        return $this->container['tipo_evento_mais_recente'];
    }

    /**
     * Sets tipo_evento_mais_recente
     *
     * @param string|null $tipo_evento_mais_recente tipo_evento_mais_recente
     *
     * @return self
     */
    public function setTipoEventoMaisRecente($tipo_evento_mais_recente)
    {
        if (is_null($tipo_evento_mais_recente)) {
            throw new \InvalidArgumentException('non-nullable tipo_evento_mais_recente cannot be null');
        }
        $this->container['tipo_evento_mais_recente'] = $tipo_evento_mais_recente;

        return $this;
    }

    /**
     * Gets data_tipo_evento_mais_recente
     *
     * @return string|null
     */
    public function getDataTipoEventoMaisRecente()
    {
        return $this->container['data_tipo_evento_mais_recente'];
    }

    /**
     * Sets data_tipo_evento_mais_recente
     *
     * @param string|null $data_tipo_evento_mais_recente data_tipo_evento_mais_recente
     *
     * @return self
     */
    public function setDataTipoEventoMaisRecente($data_tipo_evento_mais_recente)
    {
        if (is_null($data_tipo_evento_mais_recente)) {
            throw new \InvalidArgumentException('non-nullable data_tipo_evento_mais_recente cannot be null');
        }
        $this->container['data_tipo_evento_mais_recente'] = $data_tipo_evento_mais_recente;

        return $this;
    }

    /**
     * Gets data_inclusao
     *
     * @return \DateTime|null
     */
    public function getDataInclusao()
    {
        return $this->container['data_inclusao'];
    }

    /**
     * Sets data_inclusao
     *
     * @param \DateTime|null $data_inclusao data_inclusao
     *
     * @return self
     */
    public function setDataInclusao($data_inclusao)
    {
        if (is_null($data_inclusao)) {
            throw new \InvalidArgumentException('non-nullable data_inclusao cannot be null');
        }
        $this->container['data_inclusao'] = $data_inclusao;

        return $this;
    }

    /**
     * Gets data_atualizacao
     *
     * @return \DateTime|null
     */
    public function getDataAtualizacao()
    {
        return $this->container['data_atualizacao'];
    }

    /**
     * Sets data_atualizacao
     *
     * @param \DateTime|null $data_atualizacao data_atualizacao
     *
     * @return self
     */
    public function setDataAtualizacao($data_atualizacao)
    {
        if (is_null($data_atualizacao)) {
            throw new \InvalidArgumentException('non-nullable data_atualizacao cannot be null');
        }
        $this->container['data_atualizacao'] = $data_atualizacao;

        return $this;
    }

    /**
     * Gets itens
     *
     * @return \OpenAPI\Client\Model\ItemNotaFiscalConsultaDTO[]|null
     */
    public function getItens()
    {
        return $this->container['itens'];
    }

    /**
     * Sets itens
     *
     * @param \OpenAPI\Client\Model\ItemNotaFiscalConsultaDTO[]|null $itens itens
     *
     * @return self
     */
    public function setItens($itens)
    {
        if (is_null($itens)) {
            throw new \InvalidArgumentException('non-nullable itens cannot be null');
        }
        $this->container['itens'] = $itens;

        return $this;
    }

    /**
     * Gets eventos
     *
     * @return \OpenAPI\Client\Model\EventoNotaFiscalConsultaDTO[]|null
     */
    public function getEventos()
    {
        return $this->container['eventos'];
    }

    /**
     * Sets eventos
     *
     * @param \OpenAPI\Client\Model\EventoNotaFiscalConsultaDTO[]|null $eventos eventos
     *
     * @return self
     */
    public function setEventos($eventos)
    {
        if (is_null($eventos)) {
            throw new \InvalidArgumentException('non-nullable eventos cannot be null');
        }
        $this->container['eventos'] = $eventos;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


